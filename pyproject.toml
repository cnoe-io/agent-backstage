[project]
name = "agent_backstage"
version = "0.1.0"
license = "Apache-2.0"
description = "A Backstage natural language agent using LangChain, LangGraph, and MCP."
authors = [
    { name = "Rehan", email = "rehagraw@cisco.com" },
]
maintainers = [
    { name = "Rehan", email = "rehagraw@cisco.com" },
]
requires-python = ">=3.12"
dependencies = [
    "agntcy-acp>=1.1.3",
    "langchain-mcp-adapters>=0.0.9",
    "uv>=0.7.2",
]

[tool.poetry]
name = "agent-backstage"
version = "0.1.0"
description = "A Backstage agent that uses MCP to interact with Backstage"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "agent_backstage"}]

[tool.poetry.dependencies]
python = ">=3.12.0,<4.0"
langchain = "^0.3.19"
langchain-openai = "^0.3.6"
langchain-mcp-adapters = "^0.0.9"
langgraph = "^0.3.5"
pydantic = "^2.6.4"
python-dotenv = "^1.0.1"
aiohttp = "^3.9.1"
fastapi = "^0.115.11"
uvicorn = "^0.34.2"
uv = "^0.7.2"
httpx = "^0.27.0"
httpx-sse = "^0.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.23.2"
pytest-cov = "^4.1.0"
black = "^23.12.1"
isort = "^5.13.2"
mypy = "^1.10.0"
ruff = "^0.4.6"

[tool.poetry.scripts]
agent_backstage = "agent_backstage.__main__:run_backstage_agent"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 88
target-version = "py312"
select = ["E", "F", "B", "I"]
ignore = []

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api" 